# Copy this file to terraform.tfvars and fill in the required values before running Terraform.

# =============================================================================
# DEPLOYMENT CONFIGURATION (CRITICAL - MUST BE SET)
# =============================================================================
# These variables control what gets deployed. For this Coolify-only package,
# deploy_coolify MUST be true. Failure to set these will cause deployment to fail
# with only network resources created (orphaned resources).

deploy_coolify = true   # REQUIRED: Deploy Coolify server (must be true for this package)
deploy_kasm    = false  # REQUIRED: Do not deploy KASM server (Coolify-only package)

# Coolify Server Configuration (CRITICAL - MUST BE SET)
# IMPORTANT: Check capacity first with: ../../scripts/check-oci-capacity.sh
coolify_ocpus             = 2   # Always Free tier: 1-4 OCPUs (recommended: 2 or 4)
coolify_memory_in_gbs     = 12  # Always Free tier: 1-24GB RAM (recommended: 12 or 24)
coolify_block_volume_size_in_gbs = 100  # Coolify data storage: 50-200GB

# Infrastructure Configuration (CRITICAL)
# IMPORTANT: Set this to an AD with available capacity (check with capacity script)
# availability_domain = "qkyj:US-ASHBURN-AD-1"  # Example format - check your region

# =============================================================================
# REQUIRED TENANCY DETAILS
# =============================================================================
# tenancy_ocid       = "ocid1.tenancy.oc1..example"
# region             = "us-phoenix-1"
# parent_compartment_ocid = "ocid1.tenancy.oc1..example"  # Use tenancy OCID for root compartment

# Authentication options (uncomment if running locally)
# user_ocid        = "ocid1.user.oc1..example"
# fingerprint      = "ab:cd:ef:12:34:56:78:90:ab:cd:ef:12:34:56:78:90"
# private_key_path = "~/.oci/oci_api_key.pem"

# SSH access - REQUIRED: Your SSH public key for server access
# ssh_authorized_keys = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGbPhiQgg... user@hostname"
# Valid formats: ssh-rsa, ssh-ed25519, ecdsa-sha2-nistp256/384/521

# Optional customizations
# deployment_label         = "dev"
# assign_public_ip         = true
# coolify_custom_tcp_ports = [3000, 3001]
# custom_image_ocid        = "ocid1.image.oc1..example"

# Ansible testing mode (set to true to skip automatic playbook execution)
# skip_ansible_execution = false

# Coolify root user configuration
# coolify_root_username = "admin"
coolify_root_user_email = "admin@example.com"  # REQUIRED - Change to your email

# =============================================================================
# OPTION 1: Cloudflare Tunnel Configuration (Recommended for full automation)
# =============================================================================
# enable_cloudflare_tunnel = true
# cloudflare_api_token     = "your-api-token-here"
# cloudflare_account_id    = "your-account-id-here"
# cloudflare_zone_id       = "your-zone-id-here"
# tunnel_hostname          = "coolify.yourdomain.com"
# ssh_hostname             = "ssh.yourdomain.com"  # Optional, auto-generated if not set

# =============================================================================
# OPTION 2: Cloudflare Origin Certificate
# =============================================================================
# enable_custom_ssl = true
#
# # Paste your Cloudflare Origin Certificate here (PEM format)
# origin_certificate = <<-EOT
# -----BEGIN CERTIFICATE-----
# MIIDtTCCAp2gAwIBAgIJAKe...
# [Your certificate content here]
# ...XYZ==
# -----END CERTIFICATE-----
# EOT
#
# # Paste your private key here (PEM format)
# private_key = <<-EOT
# -----BEGIN PRIVATE KEY-----
# MIIEvQIBADANBgkqhkiG9w0B...
# [Your private key content here]
# ...abc=
# -----END PRIVATE KEY-----
# EOT
